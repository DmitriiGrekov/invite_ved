upstream backend {
    server backend:8001;
}
upstream frontend {
    server frontend:3000;
}
server {
    # the connection to the outside world
    # will be changed to incorporate cert's bot and ssl
    # just to test it localy for now
    client_max_body_size 500M;
    listen       80;
     server_name example.com;

    #location /api {
        # where to redirect `/` requests
        # to inner `innerdjango` upstream
        #proxy_pass http://backend;
    #}
    
    #location /api/static {
        #proxy_pass http://backend;
    #}

    #location /api/media {
        # autoindex on;
        #alias /media/;
        # proxy_pass http://backend;
    #}

    location / {
        # autoindex on;
        # autoindex_exact_size on;
        # root /var/www/frontend;
        # try_files $uri $uri/ index.html;
        #proxy_pass http://frontend;
	return 301 https://$host$request_uri;
    }
    #location /api {
        # autoindex on;
        # autoindex_exact_size on;
        # root /var/www/frontend;
        # try_files $uri $uri/ index.html;
        #proxy_pass http://frontend;
	#return 301 https://$host$request_uri;
    #}
    location /.well-known/acme-challenge/ { # <-- this section
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}

server {
    # new server, but for ssl (443 port)
    listen 443 ssl; # listen 443 port
    server_name lesnaya-skazka.com;
    ssl_certificate /etc/letsencrypt/live/lesnaya-skazka.com/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/lesnaya-skazka.com/privkey.pem;
    client_max_body_size 500M;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://frontend; # pass these requests to internal upstream
    }
    location /api {
        proxy_pass   http://backend;
	proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
   location /api/media {
        #autoindex on;
        alias /media/;
        #proxy_pass http://backend;
    }

}
